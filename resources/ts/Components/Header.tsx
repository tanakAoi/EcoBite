import { Link, usePage } from "@inertiajs/react";
import React from "react";
import { Cart, User } from "../types";
import axios from "axios";
import { toast } from "react-toastify";

interface HeaderProps {
    user: User | null;
    cart: Cart;
}

const Header: React.FC<HeaderProps> = () => {
    const { user } = usePage().props;

    const handleLogout = async () => {
        const response = await axios.post(route("logout"));

        if (response.status === 200) {
            if (response.status === 200) {
                toast.success("You have been logged out!");
                setTimeout(() => {
                    window.location.href = "/";
                }, 5000);
            }
        }
    };

    return (
        <header className="bg-chinese-leaf px-8 py-4 flex justify-between text-white">
            <Link href="/">
                <svg
                    width="132"
                    height="26"
                    viewBox="0 0 132 26"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                >
                    <path
                        d="M25.5851 14.9683C25.356 14.9683 25.1702 15.154 25.1702 15.3832V16.6278H0.829787V15.3832C0.829787 15.154 0.644026 14.9683 0.414894 14.9683C0.185762 14.9683 0 15.154 0 15.3832V25.5141C0 25.7433 0.185762 25.929 0.414894 25.929H25.5851C25.8142 25.929 26 25.7433 26 25.5141V15.3832C26 15.154 25.8142 14.9683 25.5851 14.9683ZM25.1702 18.2874H3.73404C3.50491 18.2874 3.31915 18.4732 3.31915 18.7023C3.31915 18.9314 3.50491 19.1172 3.73404 19.1172H25.1702V25.0992H0.829787V19.1172H2.07447C2.3036 19.1172 2.48936 18.9314 2.48936 18.7023C2.48936 18.4732 2.3036 18.2874 2.07447 18.2874H0.829787V17.4576H25.1702V18.2874Z"
                        fill="white"
                    />
                    <path
                        d="M10.4708 15.7046C10.5479 15.7675 10.6406 15.7981 10.7329 15.7981C10.8532 15.7981 10.9726 15.7461 11.0545 15.6456L15.6545 10.0105C15.7994 9.83304 15.773 9.57166 15.5955 9.42672C15.4181 9.28184 15.1567 9.30823 15.0117 9.48575L10.4117 15.1208C10.2669 15.2983 10.2933 15.5597 10.4708 15.7046Z"
                        fill="white"
                    />
                    <path
                        d="M12.5139 15.1208C12.369 15.2983 12.3954 15.5597 12.5729 15.7046C12.65 15.7675 12.7428 15.7981 12.835 15.7981C12.9554 15.7981 13.0747 15.7461 13.1567 15.6456C13.1567 15.6456 17.6921 10.0895 17.7558 10.0115C17.7561 10.0112 17.7563 10.0109 17.7566 10.0106C17.7822 9.97927 17.8096 9.94895 17.838 9.92046C18.3002 9.45832 19.0523 9.45832 19.5145 9.92046L20.6584 11.0644C21.1206 11.5266 21.1206 12.2787 20.6584 12.7409C20.6299 12.7694 20.5996 12.7968 20.5684 12.8223L17.8249 15.0618C17.6474 15.2068 17.621 15.4681 17.7659 15.6456C17.8479 15.7461 17.9673 15.7981 18.0875 15.7981C18.1798 15.7981 18.2726 15.7675 18.3496 15.7046L21.0932 13.465C21.146 13.4219 21.1971 13.3757 21.2452 13.3276C21.9275 12.6453 22.0169 11.5915 21.5142 10.8114C22.6378 9.81287 24.0693 9.26676 25.5851 9.26676C25.8142 9.26676 25.9999 9.08099 25.9999 8.85186C25.9999 8.62273 25.8142 8.43697 25.5851 8.43697C23.906 8.43697 22.3177 9.02711 21.0567 10.1089L24.5552 6.6105C24.7172 6.44847 24.7172 6.18581 24.5552 6.02378C24.3931 5.86175 24.1304 5.86175 23.9685 6.02378L20.4703 9.52194C21.552 8.26094 22.142 6.67284 22.142 4.9939C22.142 4.76477 21.9562 4.57901 21.7271 4.57901C21.498 4.57901 21.3122 4.76477 21.3122 4.9939C21.3122 6.50959 20.7661 7.9412 19.7676 9.06478C18.9875 8.56199 17.9336 8.65144 17.2513 9.33375C17.2033 9.38182 17.157 9.43293 17.1139 9.48571L17.115 9.48654C17.0964 9.50723 17.0791 9.52841 17.0623 9.54905L12.5139 15.1208Z"
                        fill="white"
                    />
                    <path
                        d="M2.07319 15.7981C2.30233 15.7981 2.48809 15.6123 2.48809 15.3832V5.32912H8.37792V15.3832C8.37792 15.6123 8.56368 15.7981 8.79281 15.7981C9.02194 15.7981 9.2077 15.6123 9.2077 15.3832V5.04705L10.7684 2.85973L11.9383 4.49928H10.8315C10.6024 4.49928 10.4166 4.68504 10.4166 4.91418C10.4166 5.14331 10.6024 5.32907 10.8315 5.32907H12.329V10.2956C12.329 10.5247 12.5148 10.7105 12.7439 10.7105C12.9731 10.7105 13.1588 10.5247 13.1588 10.2956V4.91423C13.1588 4.82782 13.1318 4.74357 13.0816 4.67326L11.1833 2.01263V0.485877C11.1833 0.256746 10.9975 0.0709839 10.7684 0.0709839H4.04875C3.81962 0.0709839 3.63386 0.256746 3.63386 0.485877V2.01258L1.73542 4.67326C1.68524 4.74357 1.65825 4.82782 1.65825 4.91423V15.3832C1.6583 15.6123 1.84401 15.7981 2.07319 15.7981ZM4.46365 0.900771H10.3535V1.73056H4.46365V0.900771ZM4.26239 2.56035H9.96264L8.57911 4.49934H2.87886L4.26239 2.56035Z"
                        fill="white"
                    />
                    <path
                        d="M23.9255 15.7981C24.1547 15.7981 24.3404 15.6124 24.3404 15.3832V14.6938C24.3404 13.8311 23.7951 13.0491 22.9836 12.7479C22.7686 12.6683 22.5299 12.7777 22.4502 12.9926C22.3705 13.2074 22.48 13.4462 22.6948 13.5259C23.1828 13.7069 23.5106 14.1763 23.5106 14.6938V15.3832C23.5106 15.6124 23.6964 15.7981 23.9255 15.7981Z"
                        fill="white"
                    />
                    <path
                        d="M36.88 22V6.424H44.152V7.384H37.984V13.048H43.552V13.984H37.984V20.992H44.392V22H36.88ZM61.4097 21.232C60.2097 21.904 58.5377 22.24 56.3937 22.24C54.2657 22.24 52.3857 21.472 50.7537 19.936C49.1377 18.4 48.3297 16.496 48.3297 14.224C48.3297 11.936 49.0337 10.024 50.4417 8.488C51.8657 6.952 53.6977 6.184 55.9377 6.184C57.7457 6.184 59.5137 6.464 61.2417 7.024L60.9537 7.936C59.2897 7.424 57.5697 7.168 55.7937 7.168C54.0177 7.168 52.5217 7.848 51.3057 9.208C50.1057 10.552 49.5057 12.208 49.5057 14.176C49.5057 16.128 50.2017 17.792 51.5937 19.168C53.0017 20.544 54.6257 21.232 56.4657 21.232C58.3057 21.232 59.8337 20.976 61.0497 20.464L61.4097 21.232ZM72.478 22.24C70.254 22.24 68.39 21.464 66.886 19.912C65.382 18.36 64.63 16.464 64.63 14.224C64.63 11.968 65.382 10.064 66.886 8.512C68.39 6.96 70.254 6.184 72.478 6.184C74.702 6.184 76.566 6.96 78.07 8.512C79.574 10.064 80.326 11.968 80.326 14.224C80.326 16.464 79.574 18.36 78.07 19.912C76.566 21.464 74.702 22.24 72.478 22.24ZM72.478 7.168C70.558 7.168 68.958 7.848 67.678 9.208C66.414 10.568 65.782 12.24 65.782 14.224C65.782 16.192 66.414 17.856 67.678 19.216C68.958 20.56 70.558 21.232 72.478 21.232C74.414 21.232 76.014 20.56 77.278 19.216C78.542 17.856 79.174 16.192 79.174 14.224C79.174 12.24 78.542 10.568 77.278 9.208C76.014 7.848 74.414 7.168 72.478 7.168ZM85.5929 6.496C86.7289 6.4 87.8969 6.352 89.0969 6.352C90.2969 6.352 91.3209 6.64 92.1689 7.216C93.0329 7.792 93.4649 8.632 93.4649 9.736C93.4649 10.568 93.2409 11.336 92.7929 12.04C92.3449 12.744 91.8009 13.28 91.1609 13.648C92.2009 13.952 93.0649 14.496 93.7529 15.28C94.4409 16.064 94.7849 16.952 94.7849 17.944C94.7849 19.32 94.3449 20.36 93.4649 21.064C92.6009 21.768 91.3769 22.12 89.7929 22.12C88.2089 22.12 86.8089 22.064 85.5929 21.952V6.496ZM87.7769 14.128L86.6969 14.152V21.04C87.3849 21.104 88.4969 21.136 90.0329 21.136C91.0729 21.136 91.9289 20.848 92.6009 20.272C93.2889 19.68 93.6329 18.944 93.6329 18.064C93.6329 17.168 93.2889 16.392 92.6009 15.736C91.9289 15.064 91.0489 14.592 89.9609 14.32C89.4009 14.192 88.6729 14.128 87.7769 14.128ZM92.3849 9.712C92.3849 8.928 92.0569 8.328 91.4009 7.912C90.7449 7.48 89.9609 7.264 89.0489 7.264C88.1369 7.264 87.3529 7.288 86.6969 7.336V13.216C88.0889 13.216 89.2009 13.256 90.0329 13.336C90.6569 13 91.2009 12.512 91.6649 11.872C92.1449 11.216 92.3849 10.496 92.3849 9.712ZM99.8312 22V6.424H100.935V22H99.8312ZM109.962 7.408H104.682V6.424H116.322V7.408H111.042V22H109.962V7.408ZM120.057 22V6.424H127.329V7.384H121.161V13.048H126.729V13.984H121.161V20.992H127.569V22H120.057Z"
                        fill="white"
                    />
                </svg>
            </Link>
            <ul className="flex gap-10">
                <li>
                    <Link href={route("product.index")}>Products</Link>
                </li>
                <li>
                    <Link href={route("recipe.index")}>Recipes</Link>
                </li>
                {user ? (
                    <li>
                        <Link href={route("user.index")}>Account</Link>
                    </li>
                ) : (
                    <li>
                        <Link href={route("register")}>Create account</Link>
                    </li>
                )}
                {user && user.role === "admin" && (
                    <li>
                        <Link href={route("admin.index")}>Admin</Link>
                    </li>
                )}
            </ul>
            <div className="flex gap-6">
                {user ? (
                    <button onClick={handleLogout}>Logout</button>
                ) : (
                    <Link href={route("login")}>Login</Link>
                )}
                <Link href={route("cart.index")}>Cart</Link>
            </div>
        </header>
    );
};

export default Header;
